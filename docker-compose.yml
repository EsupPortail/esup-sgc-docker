version: '3.8'
services:

  esup-sgc-reverse-proxy:
    image: traefik:v2.10
    command: --api.insecure=true --providers.docker --providers.docker.exposedbydefault=false --entrypoints.web.address=:80
    ports:
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "7080:8080"      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
  esup-sgc-build:
    depends_on:
      esup-sgc-openldap:
        condition: service_started    
      esup-sgc-db:
        condition: service_healthy  
    build:
        context: ./docker/esup-sgc
        dockerfile: esup-sgc-build.dockerfile
    volumes:
      - esup-sgc-vol:/opt/esup-sgc
      - m2-vol:/root/.m2      
    healthcheck:
      test: [ "CMD-SHELL", "psql -qtAX postgresql://postgres:postgres@esup-sgc-db:5432/esupsgc -c \"SELECT EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename  = 'appli_config');\" | grep -c 't' > /dev/null" ]
      interval: 5s
      timeout: 5s
      retries: 5      
      
  esup-sgc-app:
    depends_on:
      esup-sgc-build:
          condition: service_healthy
    build:
        context: ./docker/esup-sgc
    volumes:
      - esup-sgc-vol:/opt/esup-sgc
      - ./docker/esup-sgc/server.xml:/usr/local/tomcat/conf/server.xml

  esup-nfc-tag-build:
    depends_on:
      esup-sgc-db:
        condition: service_healthy  
    build:
        context: ./docker/esup-nfc-tag-server
        dockerfile: esup-nfc-tag-build.dockerfile
    volumes:
      - esup-nfc-tag-server-vol:/opt/esup-nfc-tag-server
      - m2-vol:/root/.m2      

  esup-nfc-tag-app:
    depends_on:
      - esup-nfc-tag-build
    build:
        context: ./docker/esup-nfc-tag-server
    volumes:
      - ./docker/esup-nfc-tag-server/server.xml:/usr/local/tomcat/conf/server.xml
      - esup-nfc-tag-server-vol:/opt/esup-nfc-tag-server

  esup-sgc-db:
    build:
      context: ./docker/postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: password
    ports:
      - 4432:5432
    volumes:
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  esup-sgc-openldap:
    image: osixia/openldap:1.5.0
    environment:
      LDAP_DOMAIN: "univ-ville.fr"
    command: --copy-service
    volumes:
      - ./docker/ldap/eduperson.schema:/container/service/slapd/assets/config/bootstrap/schema/eduperson.schema
      - ./docker/ldap/schac.schema:/container/service/slapd/assets/config/bootstrap/schema/schac.schema
      - ./docker/ldap/supann-2021-10-01.schema:/container/service/slapd/assets/config/bootstrap/schema/supann-2021-10-01.schema
      - ./docker/ldap/data.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/data.ldif
    ports:
      - 3890:389

  esup-sgc-front:
    hostname: esup-sgc.localhost  
    depends_on:
      - esup-sgc-app
    build:
      context: ./docker/esup-sgc-front
    environment:
      ####### APACHE SECTION #######
      - SERVICE_TO_PROTECT=esup-sgc-app
      - SERVICE_PORT=8209
      ####### SHIBBOLETH SECTION #######
      - HOSTNAME=esup-sgc.localhost
      - IDP_ENTITY_ID=http://idp.localhost/idp/shibboleth
      - IDP_METADATA_URL=http://idp.localhost/idp/shibboleth
      - SHIB_METADATA_BACKUP_URL=http://esup-sgc.localhost/saml/idp
      - SHIB_DOWNLOAD_METADATA=true
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -LI http://esup-sgc.localhost/Shibboleth.sso/Metadata" ]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      - traefik.http.routers.esup-sgc-front.rule=Host(`esup-sgc.localhost`)
      - traefik.http.services.esup-sgc-front.loadbalancer.server.port=80      
      - traefik.enable=true
      
  esup-sgc-shib-idp:
    hostname: idp.localhost
    build:
      context: ./docker/shib-idp
    depends_on:
      esup-sgc-front:
        condition: service_healthy
      esup-nfc-tag-front:
        condition: service_healthy
    labels:
      - traefik.http.routers.esup-sgc-shib-idp.rule=Host(`idp.localhost`)
      - traefik.http.services.esup-sgc-shib-idp.loadbalancer.server.port=80
      - traefik.enable=true

  esup-nfc-tag-front:
    hostname: esup-nfc-tag.localhost    
    depends_on:
      - esup-nfc-tag-app
    build:
      context: ./docker/esup-nfc-tag-front
    environment:
      ####### APACHE SECTION #######
      - SERVICE_TO_PROTECT=esup-nfc-tag-app
      - SERVICE_PORT=8309
      ####### SHIBBOLETH SECTION #######
      - HOSTNAME=esup-nfc-tag.localhost
      - IDP_ENTITY_ID=http://idp.localhost/idp/shibboleth
      - IDP_METADATA_URL=http://idp.localhost/idp/shibboleth
      - SHIB_METADATA_BACKUP_URL=http://esup-nfc-tag.localhost/saml/idp
      - SHIB_DOWNLOAD_METADATA=true
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -LI http://esup-nfc-tag.localhost/Shibboleth.sso/Metadata" ]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      - traefik.http.routers.esup-nfc-tag-front.rule=Host(`esup-nfc-tag.localhost`)
      - traefik.http.services.esup-nfc-tag-front.loadbalancer.server.port=80            
      - traefik.enable=true
      
  esup-sgc-client:
    depends_on:
      - esup-sgc-shib-idp
    build:
        context: ./docker/esup-sgc-client
    volumes:    
      - esup-sgc-client-vol:/opt/esup-sgc-client
      - m2-vol:/root/.m2
      - dev-bus-vol:/dev/bus
      - tmp-x11-vol:/tmp/.X11-unix
    environment:
      - DISPLAY=:0
    network_mode: host

volumes:
  esup-sgc-vol:
    driver_opts:
      type: none
      device: ${PWD}/esup-sgc
      o: bind
  esup-sgc-client-vol:
    driver_opts:
      type: none
      device: ${PWD}/esup-sgc-client
      o: bind      
  esup-nfc-tag-server-vol:
    driver_opts:
      type: none
      device: ${PWD}/esup-nfc-tag-server
      o: bind
  dev-bus-vol:
    driver_opts:
      type: none
      device: /dev/bus
      o: bind          
  m2-vol:
    driver_opts:
      type: none
      device: ${HOME}/.m2
      o: bind
  tmp-x11-vol:
    driver_opts:
      type: none
      device: /tmp/.X11-unix
      o: bind
